<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 数据库配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:/config/jdbc.properties</value>
		</property>
	</bean>

	<!-- 数据库源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${dataSource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${dataSource.url}</value>
		</property>
		<property name="user">
			<value>${dataSource.username}</value>
		</property>
		<property name="password">
			<value>${dataSource.password}</value>
		</property>

		<!-- 最大连接数 -->
		<property name="maxPoolSize">
			<value>${dataSource.c3p0.max_size}</value>
		</property>

		<!-- 最小连接数 -->
		<property name="minPoolSize">
			<value>${dataSource.c3p0.min_size}</value>
		</property>

		<!-- 最大空闲时间，超时未被使用则连接被抛弃，单位毫秒 -->
		<property name="maxIdleTime">
			<value>${dataSource.c3p0.max_idle_time}</value>
		</property>

		<!-- 获得连接的超时时间,如果超过这个时间,会抛出异常，单位毫秒 -->
		<property name="checkoutTimeout">
			<value>${dataSource.c3p0.checkout_timeout}</value>
		</property>

		<!-- 最大的PreparedStatement的数量 -->
		<property name="maxStatements">
			<value>${dataSource.c3p0.max_statements}</value>
		</property>

		<!-- 每隔120秒检查连接池里的空闲连接 ，单位是秒 -->
		<property name="idleConnectionTestPeriod">
			<value>${dataSource.c3p0.idle_test_period}</value>
		</property>

		<!-- 当连接池里面的连接用完的时候，C3P0一下获取的新的连接数 -->
		<property name="acquireIncrement">
			<value>${dataSource.c3p0.acquire_increment}</value>
		</property>

	</bean>

	<!-- MyBatis数据库连接池工厂配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:/config/database/mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 数据库连接 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>

    	<!-- 事务配置-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
    </bean>
    
     <tx:advice id="allTxAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="del*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
      <tx:method name="ins*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
      <tx:method name="GropDisUser*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
      <tx:method name="UserDisApp*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
      <tx:method name="register*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
      <tx:method name="upd*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.Exception" />
      <tx:method name="get*" propagation="SUPPORTS"/>
    </tx:attributes>
  </tx:advice>
  
  <aop:config>    
    <aop:pointcut id="pc" expression="execution(public * org.demo.user.service.impl.*.*(..))" /> 
    <aop:advisor pointcut-ref="pc" advice-ref="allTxAdvice" />
  </aop:config>
  

	<!-- DAO -->
	<bean id="userDao" class="org.demo.user.dao.impl.UserDaoImpl">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
</beans>